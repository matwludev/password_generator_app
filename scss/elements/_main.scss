body {
    main {
        width: 100%;
        padding: 0 2rem;

        @include tablet {
          padding: 0 12rem;
        }

        @include desktop {
          padding: 0 45rem;
        }
        .generator { 
            background-color: map-get($colors, main-passGenBg-color );
            display: flex;
            flex-direction: row;
            align-items: center;
            justify-content: space-between;

            p {
                margin: 2rem 0 2rem 2rem;
                font-size: 2.4rem;
                font-weight: 700;
                color: map-get($colors , main-passGenTextOff-color );

                @include tablet {
                  font-size: 3.2rem;
                }
            }

            button {
                background: none;
                border: none;
                margin-right: 2.5rem;

                &:hover {
                  cursor: pointer;
                  svg {
                    path {
                      fill: map-get($colors, main-passGenBtnHover-color );
                    }
                  }
                }
            }
        }
        .options {
            background-color: map-get($colors, main-optionsBg-color );
            margin-top: 2rem;
            padding: 2rem;
            display: flex;
            flex-direction: column;
            align-items: center;

            .char__lengthTextBox {
                width: 100%;
                display: flex;
                flex-direction: row;
                justify-content: space-between;
                align-items: center;
                align-self: flex-start;

                label {
                    color: map-get($colors , main-lengthText-color );
                    font-size: 1.6rem;

                    @include tablet {
                      font-size: 1.8rem;
                    }
                }

                .rangeValue{
                    font-size: 2.4rem;
                    color: map-get($colors, main-rangeText-color );
                }
            }

            input[type=range] {
                width: 100%;
                outline: none;
                margin: 8.95px 0 3rem 0;
                -webkit-appearance: none;
                background: linear-gradient(to right, hsl(127, 100%, 82%)  0%, hsl(127, 100%, 82%)  calc(50% - 12px), hsl(248, 14%, 11%) calc(50% - 12px), hsl(248, 14%, 11%));
            
              }
              input[type=range]:focus {
                outline: none;
              }
              input[type=range]::-webkit-slider-runnable-track {
                background: hsl(248, 14%, 11%);
                border: 0.2px solid hsl(248, 14%, 11%);
                border-radius: 1.3px; 
                width: 100%;
                height: 8.1px;
                cursor: pointer;
              }
              input[type=range]::-webkit-slider-thumb {
                margin-top: -9.15px;
                width: 3rem;
                height: 3rem;
                background: #e7e6eb;
                border: 1.8px solid #e7e6eb;
                border-radius: 15px;
                cursor: pointer;
                -webkit-appearance: none;

                &:active, &:hover {
                  background: hsl(248, 14%, 11%);
                  border-color: hsl(127, 100%, 82%) ;
                }
              }
              input[type=range]:focus::-webkit-slider-runnable-track {
                background: hsl(248, 14%, 11%);
              }
              input[type=range]::-moz-range-track {
  
                border-radius: 1.3px;
                width: 100%;
                height: 8.1px;
                cursor: pointer;
              }
              input[type=range]::-moz-range-thumb {
                width: 26px;
                height: 26px;
                background: #e7e6eb;
                border: 1.8px solid #e7e6eb;
                border-radius: 15px; 
                cursor: pointer;

                @include desktop {
                  &:active, &:hover {
                    background: hsl(248, 14%, 11%);
                    border-color: hsl(127, 100%, 82%) ;
                  }
                }
              }
              input[type=range]::-ms-track {
                background: transparent;
                border-color: transparent;
                border-width: 9.85px 0;
                color: transparent;
                width: 100%;
                height: 8.1px;
                cursor: pointer;
              }
              input[type=range]::-ms-fill-lower {
                background: #9effaa;
                border: 0.2px solid #a3ffae;
                border-radius: 2.6px;
              }
              input[type=range]::-ms-fill-upper {
                background: hsl(248, 14%, 11%);
                border: 0.2px solid hsl(248, 14%, 11%);
                border-radius: 2.6px;
              }
              input[type=range]::-ms-thumb {
                width: 26px;
                height: 26px;
                background: #e7e6eb;
                border: 1.8px solid #e7e6eb;
                border-radius: 15px;
                cursor: pointer;
                margin-top: 0px;
                &:active, &:hover {
                  background: hsl(248, 14%, 11%);
                  border-color: hsl(127, 100%, 82%) ;
                }
 
                /*Needed to keep the Edge thumb centred*/
              }
              input[type=range]:focus::-ms-fill-lower {
                background: rgba(163, 255, 174, 0.78);
              }
              input[type=range]:focus::-ms-fill-upper {
                background: hsl(248, 14%, 11%);
              }
              

            .options__checkboxWrapper {
                margin-bottom: 2rem;
                display: flex;
                flex-direction: row;
                align-items: center;
                align-self: flex-start;
                input {
                    box-sizing: border-box;
                    position: absolute; 
                    opacity: 0;
                  
                    & + label {
                      position: relative;
                      cursor: pointer;
                      padding: 0;
                    }
                  
                    // Box.
                    & + label:before {
                      content: '';
                      margin-right: 2rem;
                      display: inline-block;
                      vertical-align: text-top;
                      width: 2rem;
                      height: 2rem;
                      background: none;
                      box-shadow: inset 0px 0px 0px .2rem map-get($colors , main-checkboxBorderBg-color );
                    }
                  
                    // Box hover
                    &:hover + label:before {
                        box-shadow: inset 0px 0px 0px .2rem map-get($colors , main-checkboxHoverBorder-color);
                    }
                  
                    // Box checked
                    &:checked + label:before {
                      background: map-get($colors , main-checkboxCheckedBg-color );
                      box-shadow: inset 0px 0px 0px .2rem map-get($colors , main-checkboxHoverBorder-color);
                    }
                    
                    // Disabled state label.
                    &:disabled + label {
                      color: red;
                      cursor: auto;
                    }
                  
                    // Disabled box.
                    &:disabled + label:before {
                      box-shadow: inset 0px 0px 0px .2rem map-get($colors , main-checkboxBorderBg-color );
                      background: none;
                    }
                  
                    // Checkmark. Could be replaced with an image
                    &:checked + label:after {
                      content: '';
                      position: absolute;
                      left: .5rem;
                      top: .9rem;
                      background: map-get($colors, main-checkboxCheckmark-color );
                      width: .2rem;
                      height: .2rem;
                      box-shadow: 
                        .2rem 0 0 map-get($colors, main-checkboxCheckmark-color ),
                        .4rem 0 0 map-get($colors, main-checkboxCheckmark-color ),
                        .4rem -.2rem 0 map-get($colors, main-checkboxCheckmark-color ),
                        .4rem -.4rem 0 map-get($colors, main-checkboxCheckmark-color ),
                        .4rem -.6rem 0 map-get($colors, main-checkboxCheckmark-color ),
                        .4rem -.8rem 0 map-get($colors, main-checkboxCheckmark-color );
                      transform: rotate(45deg);
                    }
                  }
                label {
                    font-size: 1.6rem;
                    color: map-get($colors, main-optionsText-color);

                    @include tablet {
                      font-size: 1.8rem;
                    }
                }
            }
            

            .options__strengthWrapper {
                width: 100%;
                display: flex; 
                flex-direction: row;
                justify-content: space-between;
                align-items: center;
                padding: 1.5rem 2rem;
                background-color: map-get($colors, main-strengthBg-color);
                h2 {
                    color: map-get($colors , main-strengthTitleText-color );
                    text-transform: uppercase;
                    font-size: 1.6rem;
                    font-weight: 700;

                    @include tablet {
                      font-size: 1.8rem;
                    }
                }
                .options__strengthWrapper-boxes { 
                    display: flex;
                    flex-direction: row;
                    align-items: center;

                    .strenght__level {
                        color: map-get($colors , main-strengthLevelText-color );
                        text-transform: uppercase;
                        font-size: 1.8rem;

                        font-size: 2.4rem;
                    }

                    .strenght__box {
                        width: 1rem;
                        height: 3rem;
                        border: .2rem solid map-get($colors , main-strengthLevelBoxBg-color);
                        margin-left: .5rem;
                    } 
                }
            }
            .generate {
                width: 100%;
                padding: 2rem;
                margin-top: 2rem;
                border-radius: 0;
                border: none;
                background-color: map-get($colors , generateBtn-Bg-color);

                &:hover {
                  background-color: transparent;
                  box-shadow: inset 0px 0px 0px .2rem map-get($colors , generateBtn-Bg-color);

                  span {
                    color: map-get($colors , generateBtn-Bg-color);
                  }

                  svg {
                    path{ 
                      fill: map-get($colors , generateBtn-Bg-color);
                    }
                  }
                }
                span {
                    font-size: 1.6rem;
                    letter-spacing: .1rem;
                    text-transform: uppercase;
                    font-weight: 700;
                    color: map-get($colors ,generateBtn-Text-color );

                    font-size: 1.8rem;
                }
                svg {
                margin-left: 2rem;
            }
            }
        }
    }
}